name: Build and Release (with PyInstaller)
on:
  push:
    branches:
      - main  # Assuming your main branch is called 'main'
    tags:
      - '*'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      
    runs-on: ${{ matrix.os }}
    
    steps:
      # Check-out repository
      - uses: actions/checkout@v5

      # OS specific run: Install dependencies
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: sudo apt-get -y install libfuse2
      
      - name: Install macOS dependencies
        if: runner.os == 'macOS'
        run: brew install gettext
      
      # Setup Python
      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'
          architecture: 'x64'
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt

      # Install dependencies
      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      # Install PyInstaller
      - name: Install PyInstaller
        run: |
          pip install pyinstaller

      # Build python script into a stand-alone executable with PyInstaller
      - name: Build with PyInstaller
        run: |
          pyinstaller --onefile ImpressionMovieMaker.py

      # Upload artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }} Build
          path: dist/ImpressionMovieMaker*  # PyInstaller places the executable in the dist folder

  publish_release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Read CHANGELOG
        id: read_release
        shell: bash
        run: |
          r=$(cat CHANGELOG.md)                       
          r="${r//'%'/'%25'}"
          r="${r//$'\n'/'%0A'}"
          r="${r//$'\r'/'%0D'}"
          echo "::set-output name=RELEASE_BODY::$r"
          
      - name: Download Linux artifacts
        uses: bettermarks/action-artifact-download@0.5.1
        with:
          repo: fetzu/ImpressionMovieMaker
          token: ${{ secrets.GITHUB_TOKEN }}
          artifact_name: Linux Build
          rename: ImpressionMovieMaker-linux
          
      - name: Download Windows artifacts
        uses: bettermarks/action-artifact-download@0.5.1
        with:
          repo: fetzu/ImpressionMovieMaker
          token: ${{ secrets.GITHUB_TOKEN }}
          artifact_name: Windows Build
          rename: ImpressionMovieMaker-windows.exe
          
      - name: Download macOS artifacts
        uses: bettermarks/action-artifact-download@0.5.1
        with:
          repo: fetzu/ImpressionMovieMaker
          token: ${{ secrets.GITHUB_TOKEN }}
          artifact_name: macOS Build
          rename: ImpressionMovieMaker-macos
      
      - name: Upload Linux binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ImpressionMovieMaker-linux
          asset_name: ImpressionMovieMaker_${{ github.ref_name }}-linux-amd64.bin
          tag: ${{ github.ref }}
          make_latest: true
          body: |
            ${{ steps.read_release.outputs.RELEASE_BODY }}
            
      - name: Upload Windows binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ImpressionMovieMaker-windows.exe
          asset_name: ImpressionMovieMaker_${{ github.ref_name }}-windows-amd64.exe
          tag: ${{ github.ref }}
          make_latest: true
          body: |
            ${{ steps.read_release.outputs.RELEASE_BODY }}
            
      - name: Upload macOS binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ImpressionMovieMaker-macos
          asset_name: ImpressionMovieMaker_${{ github.ref_name }}-macos-amd64.bin
          tag: ${{ github.ref }}
          make_latest: true
          body: |
            ${{ steps.read_release.outputs.RELEASE_BODY }}

  delete_bleeding_edge:
    if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.event.pull_request.merged == true) }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Delete bleeding edge release
        uses: dev-drprasad/delete-tag-and-release@v1.1
        with:
          tag_name: bleeding-edge
          github_token: ${{ secrets.GITHUB_TOKEN }}
          delete_release: true
        continue-on-error: true

  publish_bleeding_edge:
    if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.event.pull_request.merged == true) }}
    needs: [build, delete_bleeding_edge]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Download Linux artifacts
        uses: bettermarks/action-artifact-download@0.5.1
        with:
          repo: fetzu/ImpressionMovieMaker
          token: ${{ secrets.GITHUB_TOKEN }}
          artifact_name: Linux Build
          rename: ImpressionMovieMaker-linux
          
      - name: Download Windows artifacts
        uses: bettermarks/action-artifact-download@0.5.1
        with:
          repo: fetzu/ImpressionMovieMaker
          token: ${{ secrets.GITHUB_TOKEN }}
          artifact_name: Windows Build
          rename: ImpressionMovieMaker-windows.exe
          
      - name: Download macOS artifacts
        uses: bettermarks/action-artifact-download@0.5.1
        with:
          repo: fetzu/ImpressionMovieMaker
          token: ${{ secrets.GITHUB_TOKEN }}
          artifact_name: macOS Build
          rename: ImpressionMovieMaker-macos
      
      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"
        
      - name: Upload Linux binary
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ImpressionMovieMaker-linux
          asset_name: ImpressionMovieMaker-bleeding-edge-linux-${{ steps.slug.outputs.sha8 }}.bin
          tag: bleeding-edge
          release_name: "Bleeding Edge Build"
          prerelease: true
          make_latest: false
          body: |
            This is a bleeding edge build of ImpressionMovieMaker.
            Commit: ${{ github.sha }}
            Build date: ${{ github.event.head_commit.timestamp }}
            
      - name: Upload Windows binary
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ImpressionMovieMaker-windows.exe
          asset_name: ImpressionMovieMaker-bleeding-edge-windows-${{ steps.slug.outputs.sha8 }}.exe
          tag: bleeding-edge
          release_name: "Bleeding Edge Build"
          prerelease: true
          make_latest: false
          body: |
            This is a bleeding edge build of ImpressionMovieMaker.
            Commit: ${{ github.sha }}
            Build date: ${{ github.event.head_commit.timestamp }}
            
      - name: Upload macOS binary
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ImpressionMovieMaker-macos
          asset_name: ImpressionMovieMaker-bleeding-edge-macos-${{ steps.slug.outputs.sha8 }}.bin
          tag: bleeding-edge
          release_name: "Bleeding Edge Build"
          prerelease: true
          make_latest: false
          body: |
            This is a bleeding edge build of ImpressionMovieMaker.
            Commit: ${{ github.sha }}
            Build date: ${{ github.event.head_commit.timestamp }}